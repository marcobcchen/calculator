{"version":3,"sources":["components/theme.tsx","components/common/BaseButton.tsx","components/common/Count.tsx","components/common/logic.tsx","components/Calculator.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","palette","common","orange","lightGreen","custom","btn","position","left","top","width","height","borderRadius","border","fontWeight","fontSize","useStyles","makeStyles","greyBtn","background","grey","color","white","lightGreyBtn","orangeBtn","btnContainer","paddingBottom","btnContainerLg","rootBtn","breakpoints","down","BaseButton","props","classes","className","size","Button","disableRipple","undefined","root","onClick","name","count","transformOrigin","Count","useState","ratio","setRatio","useEffect","onResize","window","innerWidth","addEventListener","Typography","align","style","transform","result","stash","operator","isOperator","stringConcat","nowNum","originNum","num","test","putInStash","Number","formula","op","console","log","length","toString","usetStyles","container","minWidth","maxWidth","padding","margin","black","btnPadding","Calculator","setResult","isZero","setIsZero","reset","splice","value","combiString","logic","ThemeProvider","Grid","item","xs","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.539f1284.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\ndeclare module '@material-ui/core/styles/createPalette' {\r\n  interface CommonColors {\r\n    orange: string\r\n    lightGreen: string\r\n  }\r\n}\r\n\r\ndeclare module '@material-ui/core/styles/createMuiTheme' {\r\n  interface Theme {\r\n    custom: {\r\n      btn: any\r\n    }\r\n  }\r\n  \r\n  interface ThemeOptions {\r\n    custom?: {\r\n      btn?: any\r\n    }\r\n  }\r\n}\r\n\r\nconst customOrange = '#f38844'\r\nconst customLightGreen = '#ddd'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    common: {\r\n      orange: customOrange,\r\n      lightGreen: customLightGreen,\r\n    }\r\n  },\r\n  custom: {\r\n    btn: {\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '999px',\r\n      border: 0,\r\n      fontWeight: 'bold',\r\n      fontSize: '2rem',\r\n    }\r\n  },\r\n})\r\n\r\nexport default theme","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  greyBtn: {\r\n    ...theme.custom.btn,\r\n    background: theme.palette.grey[800],\r\n    color: theme.palette.common.white\r\n  },\r\n  lightGreyBtn: {\r\n    ...theme.custom.btn,\r\n    background: theme.palette.grey[500],\r\n    color: theme.palette.grey[800]\r\n  },\r\n  orangeBtn: {\r\n    ...theme.custom.btn,\r\n    background: theme.palette.common.orange,\r\n    color: theme.palette.common.white,\r\n  },\r\n  btnContainer: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    paddingBottom: '100%',\r\n  },\r\n  btnContainerLg: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    paddingBottom: 'calc(50% - 8px)',\r\n  },\r\n  rootBtn: {\r\n    [theme.breakpoints.down(450)]: {\r\n      fontSize: '1.75rem',\r\n    },\r\n    [theme.breakpoints.down(400)]: {\r\n      fontSize: '1.5rem',\r\n    },\r\n    '&:hover': {\r\n      background: theme.palette.common.lightGreen,\r\n    },\r\n  }\r\n}))\r\n\r\ninterface IBaseButton{\r\n  name: string\r\n  background: string\r\n  size?: string\r\n  onClick: (value: string) => void\r\n}\r\n\r\nconst BaseButton = (props:IBaseButton) => {\r\n  const classes = useStyles()\r\n\r\n  return(\r\n    <div \r\n      className={\r\n        props.size === 'lg' ? classes.btnContainerLg : classes.btnContainer\r\n      }\r\n    >\r\n      <Button \r\n        disableRipple\r\n        className={ \r\n          props.background === 'lightGrey' ? classes.lightGreyBtn : undefined ||\r\n          props.background === 'grey' ? classes.greyBtn : undefined ||\r\n          props.background === 'orange' ? classes.orangeBtn : undefined \r\n        }\r\n        classes={{root: classes.rootBtn}}\r\n        onClick={() => props.onClick(props.name)}\r\n      >\r\n        {props.name}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BaseButton","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Typography } from '@material-ui/core'\r\n\r\ninterface IProps{\r\n  result: string\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  count: {\r\n    fontSize: '70px',\r\n    transformOrigin: '100% 100%',\r\n    width: '100%',\r\n  }\r\n}))\r\n\r\nconst Count = (props:IProps) => {\r\n  const classes = useStyles()\r\n  const [ratio, setRatio] = useState(1)\r\n\r\n  useEffect(() => {\r\n    function onResize(){\r\n      if(window.innerWidth >= 500){\r\n        setRatio(1)\r\n      } else if(window.innerWidth <= 350){\r\n        setRatio(350 / 500)\r\n      } else{\r\n        setRatio(window.innerWidth / 500)\r\n      }\r\n    }\r\n    window.addEventListener('resize', onResize)\r\n    onResize()\r\n  }, [])\r\n\r\n  return(\r\n    <Typography align='right' className={classes.count} style={{transform: 'scale('+ ratio +')'}}>\r\n      {props.result}\r\n    </Typography>\r\n  )\r\n}\r\nexport default Count","const stash: number[] = []\r\nlet operator: string = ''\r\nlet isOperator: boolean = false\r\n\r\nexport const stringConcat = (nowNum: string, originNum: string) => {\r\n  let num = ''\r\n  // 檢查是否為0~9或小數點\r\n  const reg1 = /[0-9]|\\./\r\n  // 檢查格式:\r\n  // 開頭為0並且後面沒有數字\r\n  const reg2 = /^0$/\r\n  // 檢查格式:\r\n  // 開頭至少有一次0-9數字、中間可以沒有或有一個點、後面有無限個或沒有0-9數字\r\n  // \\d = [0-9]\r\n  const reg3 = /^\\d+\\.?\\d*$/\r\n\r\n  if(reg1.test(nowNum)){\r\n    if(reg2.test(originNum) && nowNum !== '.'){\r\n      num = nowNum\r\n    }else{\r\n      if(reg3.test(originNum + nowNum)){\r\n        num = originNum + nowNum\r\n      }else{\r\n        num = originNum\r\n      }\r\n    }\r\n  }\r\n  putInStash(num)\r\n  return num\r\n}\r\n\r\nconst putInStash = (num: string) => {\r\n  if(!isOperator){\r\n    stash[0] = Number(num)\r\n  }else{\r\n    stash[1] = Number(num)\r\n  }\r\n}\r\n\r\nexport const cancel = () => {\r\n  isOperator = false\r\n  stash.splice(0, stash.length)\r\n}\r\n\r\nexport const add = () => {\r\n  console.log('add')\r\n  return formula('add')\r\n}\r\n\r\nexport const subtract = () => {\r\n  console.log('subtract')\r\n  return formula('subtract')\r\n}\r\n\r\nexport const multiply = () => {\r\n  return formula('multiply')\r\n}\r\n\r\nexport const divide = () => {\r\n  return formula('divide')\r\n}\r\n\r\nexport const equal = () =>{\r\n  return formula('equal')\r\n}\r\n\r\nconst formula = (op: string) => {\r\n  console.log(op, operator, stash)\r\n\r\n  isOperator = true\r\n  let result = 0\r\n\r\n  if(op !== 'equal'){\r\n    operator = op\r\n  }\r\n \r\n  if(stash.length === 0){\r\n    result = 0\r\n  }else{\r\n    if(stash.length > 1){\r\n      switch(operator){\r\n        case 'add':\r\n          result = stash[0] + stash[1]\r\n          break\r\n        case 'subtract':\r\n          result = stash[0] - stash[1]\r\n          break\r\n        case 'multiply':\r\n          result = stash[0] * stash[1]\r\n          break\r\n        case 'divide':\r\n          result = stash[0] / stash[1]\r\n          break\r\n      }\r\n      stash[0] = result\r\n    }else{\r\n      result = stash[0]\r\n    }\r\n  }\r\n  \r\n  return result.toString()\r\n}","import React, { useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport theme from './theme'\r\nimport BaseButton from './common/BaseButton'\r\nimport Count from './common/Count'\r\nimport * as logic from './common/logic'\r\n\r\nconst usetStyles = makeStyles(theme => ({\r\n  container: {\r\n    minWidth: '350px',\r\n    maxWidth: '500px',\r\n    padding: '16px',\r\n    margin: '0 auto',\r\n    background: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  btnPadding: {\r\n    padding: '8px',\r\n  },\r\n  count:{\r\n    padding: '32px 8px 0 8px',\r\n  }\r\n}))\r\n\r\nconst Calculator = () => {\r\n  const classes = usetStyles()\r\n  const [result, setResult] = useState('0')\r\n  const [isZero, setIsZero] = useState(false)\r\n  \r\n  const reset = () => {\r\n    logic.cancel()\r\n    setResult('0')\r\n  }\r\n\r\n  const formula = (value: string) => {\r\n    setIsZero(true)\r\n    switch (value){\r\n      case 'C':\r\n        reset()\r\n        break\r\n      case '+':\r\n        if(!isZero) setResult(logic.add())\r\n        break\r\n      case '-':\r\n        if(!isZero) setResult(logic.subtract())\r\n        break\r\n      case '×':\r\n        if(!isZero) setResult(logic.multiply())\r\n        break\r\n      case '÷':\r\n        if(!isZero) setResult(logic.divide())\r\n        break\r\n      case '=':\r\n        // setIsZero(false)\r\n        setResult(logic.equal())\r\n        break\r\n    }\r\n  }\r\n\r\n  const combiString = (num: string) => {\r\n    if(isZero){\r\n      setIsZero(false)\r\n      setResult(logic.stringConcat(num, '0'))\r\n    }else{\r\n      setResult(logic.stringConcat(num, result))\r\n    }\r\n  }\r\n\r\n  return(\r\n    <ThemeProvider theme={theme}>\r\n      <Grid container className={classes.container}>\r\n        <Grid item xs={12} className={classes.count}>\r\n          <Count result={result} />\r\n        </Grid>\r\n        <Grid item container xs={9}>\r\n          <Grid item xs={4} className={classes.btnPadding}>\r\n            <BaseButton name={'C'} background={'lightGrey'} onClick={formula} />\r\n          </Grid>\r\n          <Grid item xs={4} className={classes.btnPadding}>\r\n            <BaseButton name={'+/-'} background={'lightGrey'} onClick={formula} />\r\n          </Grid>\r\n          <Grid item xs={4} className={classes.btnPadding}>\r\n            <BaseButton name={'%'} background={'lightGrey'} onClick={formula} />\r\n          </Grid>\r\n          <Grid item xs={4} className={classes.btnPadding}>\r\n            <BaseButton name={'7'} background={'grey'} onClick={combiString} />\r\n          </Grid>\r\n          <Grid item xs={4} className={classes.btnPadding}>\r\n            <BaseButton name={'8'} background={'grey'} onClick={combiString} />\r\n          </Grid>\r\n          <Grid item xs={4} className={classes.btnPadding}>\r\n            <BaseButton name={'9'} background={'grey'} onClick={combiString} />\r\n          </Grid>\r\n          <Grid item xs={4} className={classes.btnPadding}>\r\n            <BaseButton name={'4'} background={'grey'} onClick={combiString} />\r\n          </Grid>\r\n          <Grid item xs={4} className={classes.btnPadding}>\r\n            <BaseButton name={'5'} background={'grey'} onClick={combiString} />\r\n          </Grid>\r\n          <Grid item xs={4} className={classes.btnPadding}>\r\n            <BaseButton name={'6'} background={'grey'} onClick={combiString} />\r\n          </Grid>\r\n          <Grid item xs={4} className={classes.btnPadding}>\r\n            <BaseButton name={'1'} background={'grey'} onClick={combiString} />\r\n          </Grid>\r\n          <Grid item xs={4} className={classes.btnPadding}>\r\n            <BaseButton name={'2'} background={'grey'} onClick={combiString} />\r\n          </Grid>\r\n          <Grid item xs={4} className={classes.btnPadding}>\r\n            <BaseButton name={'3'} background={'grey'} onClick={combiString} />\r\n          </Grid>\r\n          <Grid container item xs={12}>\r\n            <Grid item xs={8} className={classes.btnPadding}>\r\n              <BaseButton name={'0'} background={'grey'} size={'lg'} onClick={combiString} />\r\n            </Grid>\r\n            <Grid item xs={4} className={classes.btnPadding}>\r\n              <BaseButton name={'.'} background={'grey'} onClick={combiString} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container xs={3}>\r\n            <Grid item xs={12} className={classes.btnPadding}>\r\n              <BaseButton name={'÷'} background={'orange'} onClick={formula} />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.btnPadding}>\r\n              <BaseButton name={'×'} background={'orange'} onClick={formula} />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.btnPadding}>\r\n              <BaseButton name={'-'} background={'orange'} onClick={formula} />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.btnPadding}>\r\n              <BaseButton name={'+'} background={'orange'} onClick={formula} />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.btnPadding}>\r\n              <BaseButton name={'='} background={'orange'} onClick={formula} />\r\n            </Grid>\r\n          </Grid>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Calculator","import React from 'react'\nimport Calculator from './components/Calculator'\n\nfunction App() {\n  return (\n    <Calculator />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}